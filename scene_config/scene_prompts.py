prompt_extract = '''<|system|>你是个分词分类系统,请你进行文本分词分类任务,给你一句话,拆分出其中的时间time,和名词或者形容词key,请对之后所有问题进行分词分类。
        下面是一些例子:
        问题:去年1月和5月的总费用->{"key":["总费用"],"time":[["2023-01"],["2023-05"]]}
        问题:2023年1月到3月的总费用的医疗类型->{"key":["总费用","医疗类型"],"time":[["2023-01","2023-03"]]}
        问题:2023年3月到5月东海县职工特殊病统筹基金费用合计统计->{"key":["东海县","职工","特殊病","统筹基金","费用","合计"],"time":[["2023-03","2023-05"]]}
        问题:2023年1月至9月居民特殊病费用合计统计->{"key":["东海县","居民","特殊病","费用","合计"],"time":[["2023-01","2023-09"]]}
        问题:前年1月到2023年2月灌云县特殊病费用合计统计->{"key":["特殊病","费用","灌云县","合计"],"time":[["2022-01","2023-02"]]}
        问题:去年4月到7月赣榆区险种费用合计统计->{"key":["赣榆区","险种","费用","合计"],"time":[["2023-04","2023-07"]]}
        问题:去年1月到2023年8月灌云县费用合计统计->{"key":["灌云县","费用","合计"],"time":[["2023-01","2023-08"]]}
        问题:去年1月到7月灌云县费用合计统计->{"key":["灌云县","费用","合计"],"time":[["2023-01","2023-07"]]}
        问题:前年1月到8月市本级职工退休费用合计统计->{"key":["市本级","职工退休","费用","合计"],"time":[["2022-01","2022-08"]]}
        问题:第一季度公务员补助统筹基金合计统计->{"key":["公务员补助","统筹基金","合计"],"time":[["2024-01","2024-03"]]}
        问题:2023年1月和4月人民医院职工特殊病总费用合计统计->{"key":["人民医院","职工","特殊病","总费用","合计"],"time":[["2023-01"],["2023-04"]]}
        问题:前三季度统计特殊病合计->{"key":["特殊病","合计"],"time":[["2024-01","2024-09"]]}
        问题:2023年前2季度透析总费用统计->{"key":["透析","总费用"],"time":[["2023-01","2023-06"]]}
        问题:第三季度透析账户合计统计->{"key":["透析","账户","合计"],"time":["2024-07","2024-09"]]}
        问题:查询2023年5月和8月各的统筹基金类别->{"key":["统筹基金"],"time":[["2023-05"],["2023-08"]]}
        问题:2023年1月-9月各各不同的特殊病统筹基金支出费用->{"key": ["特殊病", "统筹基金","支出费用"], "time":[["2023-01", "2023-09"]]}
        问题:请分析有关2023年前二季度特殊病统筹基金费用根据汇总->{"key":["特殊病","统筹基金","费用"],"time":[["2023-01","2023-06"]]}
        问题:请给出2023年各特殊病的职工医保基金支出金额按照度汇总->{"key": ["特殊病", "职工","医保基金"], "time":[["2023-01","2023-12"]]}
        问题:查询1月和7月职工特殊病统筹基金合计及分析>{"key": ["职工","特殊病","统筹基金","合计"], "time":[["2024-01","2024-07"]]}
        问题:2月到6月医院特殊病账户合计统计->{"key":["医院","特殊病","账户","合计"],"time":[["2024-02","2024-06"]]}
        问题:查询今年1月到7月东海县职工特殊病统筹基金->{"key": ["东海县","职工","特殊病", "统筹基金"], "time":[["2024-01","2024-07"]]}规则: 
        key:分词，去除时间之后分成合适的关键词。{force_word}是key里面可能出现的词。
        time:按照yyyy-mm格式输出，时间范围输出起始时间和结束时间两个值在一个list,时间列表则每个时间在一个list,当前日期是：{current_data},如果只有月份，默认为2024年
        group:构造sql查询语句时的分组条件，不存在该种类型的词可不抽取。{group_word}是group里面可能出现的词。
        不可新增类型，只能按json格式返回{"key":[],"time":[[]],"group":[]}输出,词不可重复选取。
        time必须是二维列表，如果出现x月到y月表示范围，则time形式为->"time":[[x,y]],如果出现x月和y月表示并列，则time形式为->"time":[[x],[y]],
        下面是问题：{user_input}'''

prompt_query_user = """你是一个专业的客服。
当前问答场景是：【{}】
JSON中每个元素都代表缺失的参数信息：
'''
value表示缺失的参数值
desc表示参数的描述，你要根据描述引导用户补充参数value值
'''
需求：
#01 一次最多只向用户问两个参数
#02 回答以"请问"开头
JSON：{}
向用户提问：
"""


where_word_match_prompt = '''
你是一个词语匹配模型，请从每种概念对应的关键词列表中匹配出用户句子可能涉及的词
每种概念对应一个关键词列表:
"病种":['恶性肿瘤（术后康复）', '肿瘤术后放疗', '恶性肿瘤（放疗）', '透析', '恶性肿瘤（化疗）', '肿瘤术后化疗', '肿瘤术后辅助治疗', '精神病', '慢性肾功衰竭（非透析治疗）', '器官移植抗排异治疗', '再生障碍性贫血', '系统性红斑狼疮', '器官移植术后抗排斥药物', '急慢性肾衰腹透', '急慢性肾衰血透', '慢性肾功能衰竭', '居民精神病门诊', '躁狂型精神病（门）', '活动性肺结核']
"医院名称":['南京市江宁区东山街道上坊社区卫生服务中心', '苏州大学附属第二医院', '无锡华清医院', '南京市浦口区中心医院', '无锡市人民医院', '南京市江宁区中医院', '昆山市第一人民医院', '苏州大学附属儿童医院', '南京建邺集庆中西医结合诊所', '北京市朝阳区奥运村社区卫生服务中心', '南京市中西医结合医院', '张家港市第六人民医院', '杭州市富阳区第一人民医院', '连云港长寿医院', '连云港市中医院', '南京市第二医院', '连云港市赣榆区中医院', '上海交通大学医学院附属新华医院', '南京医科大学第二附属医院', '赣榆瑞慈医院', '连云港灌云仁济医院', '常州市第七人民医院', '灌云县人民医院', '苏州大学附属第一医院', '连云港市第一人民医院', '启东市城区医院', '东海县人民医院', '南通大学附属医院', '常熟市古里卫生院', '江苏省中西医结合医院', '江苏省人民医院', '连云港圣安医院', '太仓市第一人民医院', '灌南县人民医院', '苏州明基医院、苏州明基医院互联网医院', '天津市滨海新区大港医院', '浙江省肿瘤医院', '连云港市第二人民医院（连云港市临床肿瘤研究所）', '灌云县精神病医院', '苏州工业园区星海医院', '淮安市第一人民医院', '镇江市中医院', '连云港市东方医院', '灌南县第一人民医院', '连云港市赣榆区人民医院', '东海县精神病医院', '上海儿童医学中心', '连云港市传染病医院，连云港市第四人民医院', '东海仁慈医院', '中国人民解放军总医院第五医学中心', '连云港市赣榆区精神病防治院（江苏省赣榆经济开发区社区卫生服务中心）', '南京南钢医院', '无锡市仁德（康复）医院', '北京王府中西医结合医院', '灌南县精神病医院', '灌云县中医院', '北京大学第一医院(北京大学北大医院）', '东海县中医院', '南京军区总医院', '南京明基医院', '南京一民医院', '南京市雨花医院(南京市雨花台区雨花社区卫生服务中心)', '连云港市康复医院']
"医院等级":['三级甲等', '二级甲等', '三级丙等', '一级甲等', '三级乙等',  '无等级']
"统筹区":['云县', '灌县', '赣区', '东县', '市本级']
"就医地":['省内异地', '本地', '省外异地']
"人员类别":['普通居民（成年）', '未成年（未入学）', '学龄前儿童', '大学生', '中小学生', '职工退休', '公务员退休', '自由职业', '职工在职', '灵活就业人员退休', '公务员在职']

下面是一些例子:
用户句子：查询云6月在省外的没有上学的孩子的情况->{"就医地":["省外异地"], "人员类别":["学龄前儿童"]}
用户句子：查询2-8月东县本地未成年的普通居民慢性剩功能衰竭情况->{"统筹区":["东县"], "就医地":["本地"], "人员类别":["未成年（未入学）","普通居民（成年）"], "病种":["慢性肾功能衰竭"]}
用户句子：查询2023年1-7月灌县连云港东方医院退休公务员以及在职职工的情况->{"统筹区":["灌县"], "医院名称":["连云港市东方医院"],"人员类别":["公务员退休","职工在职"]}
用户句子：查询2023年4-8月各个医院不同统筹区以及不同人员类别狂躁型精神病-> {"病种":["躁狂型精神病（门）"]}
用户句子：查询2023年1-5月居民特殊病统筹基金平均情况->{}
不可新增类型，只能按json格式返回{"xx":[],"yy":[],"zz":[]}输出,词不可重复选取，词必须存在词库中，不要自己造词。
如果匹配不到合适的词，可返回空{}。
用户句子：{user_input}->
'''


shijian_prompt = ('现在你是一个数据分析师,SQL大神,请根据用户提供的表的信息，以及用户的需求，写出效率最高的SQL,并返回json格式的数据。'
                  '表信息如下：'
                  '表名：sampling;'
                  '字段：id(id),xh(序号),guid(guid),rwbh(任务编号),ccpch(抽查批次号),jybgbh(检验报告编码),cpflmc(产品分类名称),'
                  'cylymc(抽样领域名称),cyhjlb(采样环节类别),cyhj(采样环节),cpdl(产品大类),cplb(产品类别),cpmc(产品名称),'
                  'sb(商标),ggxh(规格型号),cpdj(产品等级),scrqbh(生产日期编号),scph(生产批号),jglb(监管类别),zsbh(证书编号),'
                  'scqymc(生产企业名称),scqysss(生产企业所属省),scqyszddm(生产企业所在地代码),scqyszdmc(生产企业所在地),'
                  'scqyxxdz(生产企业详细地址),scqyyzbm(生产企业邮政编号),scqylxr(生产企业联系人),qylxgddh(企业联系固定电话),'
                  'qylxyddh(企业联系移动电话),scqyyyzz(生产企业营业执照),scqyzzjgdm(生产企业组织机构代码),'
                  'scqygmdm(生产企业规模代码),scqygmmc(生产企业规模名称),scqyjjlxdm(生产企业经济类型代码),'
                  'scqyjjlxmc(生产企业经济类型名称),zltxrzzsbh(质量体系认证证书编号),scqyxse(生产企业销售额),'
                  'stdmc(实体店名称),stdlxfs(实体店联系电话),stdtxdz(实体店通讯地址),stdtyxydm(实体店统一信用代码),'
                  'stdfrdb(实体店法人代表),stdszd(实体店所在地),dspt(电商平台名称),ptssd(平台所属地),dsmc(电商名称),'
                  'dsssd(电商所属地),dslx(电商类型),dstxdz(电商通讯地址),dsyyzcm(电商营业注册码),dslxfs(电商联系方式),'
                  'xsdj(销售单价（元）),fpbh(发票编号),kpdw(开票单位),zbptmc(直播平台名称),zbptssd(直播平台所属地),'
                  'zbjid(直播间ID),zbjmc(直播间名称),bptxs(本平台销售),qtlydwmc(其他来源单位名称),qtlyfrdb(其他来源法人代表),'
                  'qtlyszdmc(其他来源所在地名称),qtlyszddm(其他来源所在地代码),qtlylxr(其他来源联系人),qtlylxdh(其他来源联系电话),'
                  'qtlytxdz(其他来源通讯地址),qtlyqyxydm(其他来源企业信用代码),ypsl(样品数量),byl(备样量),byfcdz(备样封存地址),'
                  'ckjyyj(参考检验依据),cyjspl(抽样基数/批量),cpjhkcl(产品进货/库存数),ccjgdm(抽查结果代码),ccjg(抽查结果),'
                  'bhgxm(不合格项目),stzlpd(实物质量判定),bqpd(标签判定),bhgcd(不合格程度),jgtzssfjc(结果通知书是否寄出),'
                  'jyjgsfqr(检验结果是否确认),ltlyypsfqr(流通领域样品是否确认),cczzdwdm(抽查组织单位代码),'
                  'cczzdwmc(抽查组织单位名称),cclxdm(抽查类型代码),cclxmc(抽查类型名称),rwxdsj(任务下达时间),yqwcsj(要求完成时间),'
                  'jydd(检验地点),cjjgdm(承检机构代码),cjjgmc(承检机构名称),cyrq(抽样日期),sbrq(上报日期),sfyy(是否异议),'
                  'ly(来源),sjlydqdm(数据来源地区代码),'
                  '用户需求:{user_input}'
                  '并且要求输出的SQL以json结果的返回, 格式为: {"result":"sql语句"}'
                  '具体的结果例如：'
                  '{"result":"SELECT * FROM table"}'
                  '{"result":"SELECT COUNT(*) FROM table"}'
                  '注意不需要分析过程，直接给出json结果')

